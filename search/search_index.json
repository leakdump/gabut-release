{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Gabut Documentation","text":"<p>Gabut is a real-time reconnaissance tool for monitoring Certificate Transparency logs and performing security scanning on discovered domains.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Certificate Transparency Monitoring</li> <li>Domain Filtering</li> <li>Port Scanning</li> <li>Service Fingerprinting</li> <li>Vulnerability Scanning</li> <li>GeoIP Integration</li> <li>Notifications</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<ul> <li>Installation Guide</li> <li>Usage Guide</li> <li>Configuration</li> <li>Templates</li> </ul>"},{"location":"#developer-resources","title":"Developer Resources","text":"<ul> <li>Architecture</li> <li>Contributing</li> </ul>"},{"location":"TEMPLATE_VARIABLES/","title":"Enhanced Template Variables for Vulnerability Scanner","text":"<p>This document describes the enhanced template variables system for the vulnerability scanner, which enables dynamic path generation in HTTP requests.</p>"},{"location":"TEMPLATE_VARIABLES/#overview","title":"Overview","text":"<p>The template variables system allows for powerful and flexible vulnerability templates by supporting various types of dynamic variables:</p> <ol> <li>Standard URL Variables: Basic URL components like BaseURL, Host, Path, etc.</li> <li>Domain Variables: Domain name and subdomain extraction</li> <li>Time Variables: Current date/time in various formats</li> <li>Random Variables: Random values for fuzzing and testing</li> <li>Environment Variables: Access to system environment variables</li> <li>JavaScript-like Expressions: String manipulation functions</li> </ol>"},{"location":"TEMPLATE_VARIABLES/#available-variables","title":"Available Variables","text":""},{"location":"TEMPLATE_VARIABLES/#standard-variables","title":"Standard Variables","text":"Variable Description Example <code>{{BaseURL}}</code> The complete URL as specified in the target <code>https://example.com:443/foo/bar.php?id=123</code> <code>{{RootURL}}</code> The root URL including scheme, hostname, and port <code>https://example.com:443</code> <code>{{Hostname}}</code> The hostname including port <code>example.com:443</code> <code>{{Host}}</code> The hostname without port <code>example.com</code> <code>{{Port}}</code> The port number <code>443</code> <code>{{Path}}</code> The directory portion of the path <code>/foo</code> <code>{{File}}</code> The filename portion of the path <code>bar.php</code> <code>{{Scheme}}</code> The URL scheme/protocol <code>https</code> <code>{{DN}}</code> Domain name without subdomain <code>example.com</code> <code>{{SD}}</code> Subdomain portion <code>www</code>"},{"location":"TEMPLATE_VARIABLES/#dynamic-variables","title":"Dynamic Variables","text":"Variable Description Example <code>{{PathN}}</code> Path segment at index N (zero-based) <code>{{Path0}}</code> \u2192 <code>foo</code>, <code>{{Path1}}</code> \u2192 <code>bar</code> <code>{{PathCount}}</code> Number of path segments <code>2</code> <code>{{Extension}}</code> File extension <code>.php</code> <code>{{BaseDomain}}</code> Base domain without subdomains <code>example.com</code> <code>{{QueryString}}</code> Query string without ? <code>id=123</code> <code>{{HasQuery}}</code> Whether the URL has a query string <code>true</code> or <code>false</code> <code>{{TLD}}</code> Top-level domain <code>com</code> <code>{{DomainWithoutTLD}}</code> Domain without TLD <code>example</code> <code>{{Subdomain}}</code> Full subdomain portion <code>www</code> or <code>api.dev</code> <code>{{DomainName}}</code> Same as <code>{{DN}}</code> <code>example.com</code>"},{"location":"TEMPLATE_VARIABLES/#time-variables","title":"Time Variables","text":"Variable Description Example <code>{{DATE}}</code> Current date in ISO format <code>2025-06-02</code> <code>{{TIME}}</code> Current time <code>15:04:05</code> <code>{{DATETIME}}</code> Current date and time <code>2025-06-02T15:04:05</code> <code>{{TIMESTAMP}}</code> Unix timestamp (seconds) <code>1717027445</code> <code>{{UNIXTIME}}</code> Same as TIMESTAMP <code>1717027445</code> <code>{{UNIXTIME_MS}}</code> Unix timestamp in milliseconds <code>1717027445123</code> <code>{{YEAR}}</code> Current year <code>2025</code> <code>{{MONTH}}</code> Current month <code>06</code> <code>{{DAY}}</code> Current day <code>02</code> <code>{{HOUR}}</code> Current hour <code>15</code> <code>{{MINUTE}}</code> Current minute <code>04</code> <code>{{SECOND}}</code> Current second <code>05</code> <code>{{YESTERDAY}}</code> Yesterday's date <code>2025-06-01</code> <code>{{TOMORROW}}</code> Tomorrow's date <code>2025-06-03</code> <code>{{LAST_WEEK}}</code> Date 7 days ago <code>2025-05-26</code> <code>{{NEXT_WEEK}}</code> Date 7 days in the future <code>2025-06-09</code> <code>{{LAST_MONTH}}</code> Date 1 month ago <code>2025-05-02</code> <code>{{NEXT_MONTH}}</code> Date 1 month in the future <code>2025-07-02</code> <code>{{LAST_YEAR}}</code> Date 1 year ago <code>2024-06-02</code> <code>{{NEXT_YEAR}}</code> Date 1 year in the future <code>2026-06-02</code>"},{"location":"TEMPLATE_VARIABLES/#random-variables","title":"Random Variables","text":"Variable Description Example <code>{{RANDOM_INT}}</code> Random integer between 1000-9999 <code>3752</code> <code>{{RANDOM_INT_4}}</code> Random 4-digit integer <code>0521</code> <code>{{RANDOM_INT_8}}</code> Random 8-digit integer <code>05214783</code> <code>{{RANDOM_HEX_8}}</code> Random 8-character hex string <code>a1b2c3d4</code> <code>{{RANDOM_HEX_16}}</code> Random 16-character hex string <code>a1b2c3d4e5f6a7b8</code> <code>{{RANDOM_HEX_32}}</code> Random 32-character hex string <code>a1b2c3d4...</code> <code>{{RANDOM_STRING_8}}</code> Random 8-character alphanumeric string <code>aB3cD7fG</code> <code>{{RANDOM_STRING_16}}</code> Random 16-character alphanumeric string <code>aB3cD7fGhJ9kL2mN</code> <code>{{RANDOM_STRING_32}}</code> Random 32-character alphanumeric string <code>aB3cD7fG...</code> <code>{{RANDOM_LETTERS_8}}</code> Random 8-character letter string <code>aBcDeFgH</code> <code>{{RANDOM_NUMBERS_8}}</code> Random 8-character number string <code>12345678</code> <code>{{RANDOM_SPECIAL_8}}</code> Random 8-character special char string <code>!@#$%^&amp;*</code> <code>{{RANDOM_MIXED_8}}</code> Random 8-character mixed string <code>a1!b2@c3</code> <code>{{RANDOM_UUID}}</code> Random UUID-like string <code>a1b2c3d4-e5f6-a7b8-c9d0-e1f2a3b4c5d6</code>"},{"location":"TEMPLATE_VARIABLES/#environment-variables","title":"Environment Variables","text":"Variable Description Example <code>{{ENV_VARIABLE}}</code> Environment variable with ENV_ prefix <code>{{ENV_PATH}}</code> <code>{{HOME}}</code> User's home directory <code>/home/username</code> <code>{{USER}}</code> Current username <code>username</code> <code>{{HOSTNAME}}</code> System hostname <code>server1</code>"},{"location":"TEMPLATE_VARIABLES/#javascript-like-expressions","title":"JavaScript-like Expressions","text":"<p>Variables can be manipulated using simple function calls with the syntax: <code>{{variableName.functionName(args)}}</code>.</p>"},{"location":"TEMPLATE_VARIABLES/#available-functions","title":"Available Functions","text":"Function Description Example Result <code>toUpperCase()</code>, <code>upper()</code> Convert to uppercase <code>{{Host.toUpperCase()}}</code> <code>EXAMPLE.COM</code> <code>toLowerCase()</code>, <code>lower()</code> Convert to lowercase <code>{{Host.toLowerCase()}}</code> <code>example.com</code> <code>trim()</code> Remove whitespace <code>{{Host.trim()}}</code> <code>example.com</code> <code>substring(start, end)</code>, <code>substr(start, end)</code> Extract substring <code>{{Host.substring(0, 7)}}</code> <code>example</code> <code>replace(old, new)</code> Replace text <code>{{Host.replace(\"example\", \"test\")}}</code> <code>test.com</code> <code>split(delimiter, index)</code> Split text <code>{{Host.split(\".\", 0)}}</code> <code>example</code> <code>length()</code>, <code>len()</code> Get string length <code>{{Host.length()}}</code> <code>11</code> <code>reverse()</code> Reverse string <code>{{Host.reverse()}}</code> <code>moc.elpmaxe</code> <code>repeat(count)</code> Repeat string <code>{{Host.repeat(2)}}</code> <code>example.comexample.com</code> <code>base64encode()</code>, <code>b64enc()</code> Encode as base64 <code>{{Host.base64encode()}}</code> <code>ZXhhbXBsZS5jb20=</code> <code>base64decode()</code>, <code>b64dec()</code> Decode from base64 <code>{{Host.base64decode()}}</code> Decoded value <code>urlEncode()</code>, <code>urlencode()</code> URL encode <code>{{Host.urlEncode()}}</code> <code>example.com</code> <code>hexEncode()</code>, <code>hexencode()</code> Hex encode <code>{{Host.hexEncode()}}</code> <code>6578616d706c652e636f6d</code>"},{"location":"TEMPLATE_VARIABLES/#example-templates","title":"Example Templates","text":""},{"location":"TEMPLATE_VARIABLES/#basic-template-with-standard-variables","title":"Basic Template with Standard Variables","text":"<pre><code>id: basic-example\n\ninfo:\n  name: Basic Template Example\n  author: Security Team\n  severity: medium\n\nhttp:\n  - method: GET\n    path:\n      - \"{{BaseURL}}/admin\"\n      - \"{{RootURL}}/wp-content/uploads\"\n      - \"{{Scheme}}://{{Host}}:{{Port}}{{Path}}/config.php\"\n\n    matchers:\n      - type: word\n        words:\n          - \"Admin Panel\"\n          - \"Upload\"\n        condition: or\n</code></pre>"},{"location":"TEMPLATE_VARIABLES/#domain-variables-example","title":"Domain Variables Example","text":"<pre><code>id: domain-config-example\n\ninfo:\n  name: Domain-Specific Configuration Files\n  author: Security Team\n  severity: high\n\nhttp:\n  - method: GET\n    path:\n      - \"{{BaseURL}}/.env.{{DN}}\"\n      - \"{{BaseURL}}/.env.{{SD}}\"\n      - \"{{BaseURL}}/config/{{Host}}.json\"\n\n    matchers:\n      - type: word\n        words:\n          - \"DB_PASSWORD\"\n          - \"API_KEY\"\n        condition: or\n</code></pre>"},{"location":"TEMPLATE_VARIABLES/#time-variables-example","title":"Time Variables Example","text":"<pre><code>id: backup-file-example\n\ninfo:\n  name: Backup File Disclosure\n  author: Security Team\n  severity: medium\n\nhttp:\n  - method: GET\n    path:\n      - \"{{BaseURL}}/backup-{{DATE}}.zip\"\n      - \"{{BaseURL}}/backup/{{YEAR}}-{{MONTH}}.sql\"\n      - \"{{BaseURL}}/logs/access_{{YEAR}}{{MONTH}}{{DAY}}.log\"\n\n    matchers:\n      - type: status\n        status:\n          - 200\n</code></pre>"},{"location":"TEMPLATE_VARIABLES/#random-variables-example","title":"Random Variables Example","text":"<pre><code>id: xss-fuzzer-example\n\ninfo:\n  name: XSS Payload Fuzzing\n  author: Security Team\n  severity: medium\n\nhttp:\n  - method: GET\n    path:\n      - \"{{BaseURL}}/search?q=&lt;script&gt;alert('{{RANDOM_STRING_8}}')&lt;/script&gt;\"\n      - \"{{BaseURL}}/user?id={{RANDOM_INT}}&amp;name=test\"\n\n    matchers:\n      - type: word\n        words:\n          - \"&lt;script&gt;alert(\"\n        condition: or\n</code></pre>"},{"location":"TEMPLATE_VARIABLES/#javascript-like-expressions-example","title":"JavaScript-like Expressions Example","text":"<pre><code>id: expression-example\n\ninfo:\n  name: Expression Testing\n  author: Security Team\n  severity: low\n\nhttp:\n  - method: GET\n    path:\n      - \"{{BaseURL}}/{{Host.toUpperCase()}}\"\n      - \"{{BaseURL}}/{{Path.replace('/', '_')}}\"\n      - \"{{BaseURL}}/{{File.toLowerCase()}}\"\n\n    matchers:\n      - type: status\n        status:\n          - 200\n          - 404\n        condition: or\n</code></pre>"},{"location":"TEMPLATE_VARIABLES/#combined-example-with-multiple-variable-types","title":"Combined Example with Multiple Variable Types","text":"<pre><code>id: combined-example\n\ninfo:\n  name: Combined Variables Example\n  author: Security Team\n  severity: medium\n\nhttp:\n  - method: GET\n    path:\n      - \"{{BaseURL}}/{{DATE}}/{{RANDOM_STRING_8}}/{{Host.toUpperCase()}}/{{SD}}\"\n\n    headers:\n      X-Timestamp: \"{{TIMESTAMP}}\"\n      X-Random: \"{{RANDOM_HEX_16}}\"\n      X-Domain: \"{{DN}}\"\n      X-Path: \"{{Path.replace('/', '-')}}\"\n\n    matchers:\n      - type: status\n        status:\n          - 200\n          - 404\n        condition: or\n\n    extractors:\n      - type: regex\n        part: body\n        regex:\n          - \"token=([a-zA-Z0-9]+)\"\n          - \"user=({{Host}}\\\\w+)\"\n        group: 1\n</code></pre>"},{"location":"TEMPLATE_VARIABLES/#best-practices","title":"Best Practices","text":"<ol> <li>Use <code>{{BaseURL}}</code> when you want to append to the exact input URL</li> <li>Use <code>{{RootURL}}</code> when you want to start from the server root</li> <li>For maximum flexibility, use individual components like <code>{{Scheme}}</code>, <code>{{Host}}</code>, etc.</li> <li>Use domain variables (<code>{{DN}}</code> and <code>{{SD}}</code>) to test for domain-specific vulnerabilities</li> <li>Use time variables to test for time-based issues like backup files and logs</li> <li>Use random variables for fuzzing and unique payloads</li> <li>Use expressions to transform values for specific testing scenarios</li> <li>When defining regex extractors, you can reference template variables in the patterns</li> </ol>"},{"location":"TEMPLATE_VARIABLES/#notes","title":"Notes","text":"<ul> <li>All variables are case-sensitive</li> <li>Variables can be used in paths, headers, and body</li> <li>Random values are different for each request</li> <li>Time values are generated at the time of request</li> <li>Expression functions are applied at template processing time, not at request time</li> </ul>"},{"location":"api-reference/","title":"API Reference","text":"<p>This section contains detailed API documentation for Gabut components.</p>"},{"location":"api-reference/#package-structure","title":"Package Structure","text":"<ul> <li><code>cmd</code>: Command-line interface</li> <li><code>internal</code>: Internal application code</li> <li><code>pkg</code>: Reusable packages</li> </ul>"},{"location":"api-reference/#core-interfaces","title":"Core Interfaces","text":""},{"location":"api-reference/#engine-interface","title":"Engine Interface","text":"<p>The reconnaissance engine provides methods for scanning targets and processing results.</p>"},{"location":"api-reference/#scanner-interface","title":"Scanner Interface","text":"<p>The vulnerability scanner processes templates and checks for security issues.</p>"},{"location":"api-reference/#notification-interface","title":"Notification Interface","text":"<p>The notification system delivers alerts through various channels.</p>"},{"location":"developer-guide/architecture/","title":"Architecture","text":"<p>Gabut is built as a modular Go application with several core components.</p>"},{"location":"developer-guide/architecture/#core-components","title":"Core Components","text":"<ul> <li>CertStream Monitor: Connects to Certificate Transparency logs to monitor new domain registrations</li> <li>Reconnaissance Engine: Performs scanning and information gathering on targets</li> <li>Vulnerability Scanner: Checks for security issues using YAML templates</li> <li>Notification System: Delivers alerts through various channels</li> </ul>"},{"location":"developer-guide/architecture/#code-structure","title":"Code Structure","text":"<ul> <li><code>cmd/</code>: Command-line interface</li> <li><code>internal/</code>: Internal application code</li> <li><code>certstream/</code>: CertStream monitoring</li> <li><code>engine/</code>: Core reconnaissance engine</li> <li><code>vulnerability/</code>: Vulnerability scanning</li> <li><code>notification/</code>: Notification system</li> <li><code>pkg/</code>: Reusable packages</li> </ul>"},{"location":"developer-guide/contributing/","title":"Contributing","text":"<p>Contributions to Gabut are welcome! Here's how to get started.</p>"},{"location":"developer-guide/contributing/#development-setup","title":"Development Setup","text":"<ol> <li>Fork the repository</li> <li>Clone your fork</li> <li>Set up the development environment</li> </ol>"},{"location":"developer-guide/contributing/#building-and-testing","title":"Building and Testing","text":"<p>?       gabut   [no test files] ?       gabut/cmd   [no test files] ?       gabut/internal/certstream   [no test files] ?       gabut/internal/common   [no test files] ?       gabut/internal/config   [no test files] ?       gabut/internal/engine   [no test files] ?       gabut/internal/fingerprints [no test files] ?       gabut/internal/geoip    [no test files] ?       gabut/internal/notification [no test files] ?       gabut/internal/resolver [no test files] ?       gabut/internal/scanner  [no test files] ?       gabut/internal/vulnerability    [no test files] ?       gabut/pkg/assets    [no test files] ?       gabut/pkg/fingerprints  [no test files] ?       gabut/pkg/fingerprints/cdn  [no test files] ?       gabut/pkg/fingerprints/server   [no test files] ?       gabut/pkg/fingerprints/tech [no test files] ?       gabut/pkg/fingerprints/waf  [no test files] ?       gabut/pkg/geoip [no test files] ?       gabut/pkg/geoip/types/query [no test files] ?       gabut/pkg/geoip/types/response  [no test files] ?       gabut/pkg/logger    [no test files] ?       gabut/pkg/resolver  [no test files] ?       gabut/pkg/utils [no test files]</p>"},{"location":"developer-guide/contributing/#submitting-pull-requests","title":"Submitting Pull Requests","text":"<ol> <li>Create a feature branch</li> <li>Make your changes</li> <li>Add tests for your changes</li> <li>Run the test suite</li> <li>Submit a pull request</li> </ol> <p>Please follow the existing code style and include appropriate tests.</p>"},{"location":"user-guide/configuration/","title":"Configuration","text":"<p>Gabut uses a YAML configuration file for its settings.</p>"},{"location":"user-guide/configuration/#configuration-file-location","title":"Configuration File Location","text":"<p>By default, Gabut looks for a file named <code>config.yaml</code> in the current directory. You can specify a different file using the <code>--config</code> flag.</p>"},{"location":"user-guide/configuration/#example-configuration","title":"Example Configuration","text":""},{"location":"user-guide/installation/","title":"Installation Guide","text":""},{"location":"user-guide/installation/#using-prebuilt-binaries","title":"Using Prebuilt Binaries","text":"<p>Download the latest release from GitHub Releases.</p>"},{"location":"user-guide/installation/#using-docker","title":"Using Docker","text":""},{"location":"user-guide/installation/#building-from-source","title":"Building from Source","text":""},{"location":"user-guide/usage/","title":"Usage Guide","text":""},{"location":"user-guide/usage/#basic-commands","title":"Basic Commands","text":""},{"location":"user-guide/usage/#examples","title":"Examples","text":""},{"location":"user-guide/usage/#monitor-for-new-domains-with-specific-keywords","title":"Monitor for new domains with specific keywords","text":""},{"location":"user-guide/usage/#scan-a-specific-target-with-vulnerability-detection","title":"Scan a specific target with vulnerability detection","text":""},{"location":"user-guide/usage/#scan-multiple-targets-from-a-file","title":"Scan multiple targets from a file","text":""}]}